[{"/Users/heoturu/Dev/hwayang/service-register/src/App.js":"1","/Users/heoturu/Dev/hwayang/service-register/src/index.js":"2","/Users/heoturu/Dev/hwayang/service-register/src/components/Button.js":"3","/Users/heoturu/Dev/hwayang/service-register/src/pages/LandingPage.js":"4","/Users/heoturu/Dev/hwayang/service-register/src/pages/services/FridayService.js":"5","/Users/heoturu/Dev/hwayang/service-register/src/components/LinkedButton.js":"6","/Users/heoturu/Dev/hwayang/service-register/src/pages/services/WednesdayService.js":"7","/Users/heoturu/Dev/hwayang/service-register/src/pages/services/SundayService.js":"8","/Users/heoturu/Dev/hwayang/service-register/src/components/NavBar.js":"9","/Users/heoturu/Dev/hwayang/service-register/src/config/firebaseConfig.js":"10","/Users/heoturu/Dev/hwayang/service-register/src/components/Footer.js":"11","/Users/heoturu/Dev/hwayang/service-register/src/components/Timer.js":"12","/Users/heoturu/Dev/hwayang/service-register/src/pages/ResultPage.js":"13","/Users/heoturu/Dev/hwayang/service-register/src/components/ServiceButton.js":"14","/Users/heoturu/Dev/hwayang/service-register/src/pages/AdminPage.js":"15","/Users/heoturu/Dev/hwayang/service-register/src/pages/AuthPage.js":"16","/Users/heoturu/Dev/hwayang/service-register/src/context/SettingContext.js":"17","/Users/heoturu/Dev/hwayang/service-register/src/pages/LoadingPage.js":"18","/Users/heoturu/Dev/hwayang/service-register/src/context/CounterContext.js":"19","/Users/heoturu/Dev/hwayang/service-register/src/context/UserContext.js":"20"},{"size":2345,"mtime":1611024534532,"results":"21","hashOfConfig":"22"},{"size":199,"mtime":1610988703278,"results":"23","hashOfConfig":"22"},{"size":464,"mtime":1610987119417,"results":"24","hashOfConfig":"22"},{"size":3938,"mtime":1611042361761,"results":"25","hashOfConfig":"22"},{"size":4190,"mtime":1610977172486,"results":"26","hashOfConfig":"22"},{"size":565,"mtime":1610983633912,"results":"27","hashOfConfig":"22"},{"size":4682,"mtime":1611005365660,"results":"28","hashOfConfig":"22"},{"size":134,"mtime":1610815017353,"results":"29","hashOfConfig":"22"},{"size":1210,"mtime":1611044498534,"results":"30","hashOfConfig":"22"},{"size":590,"mtime":1610997455259,"results":"31","hashOfConfig":"22"},{"size":587,"mtime":1610966603816,"results":"32","hashOfConfig":"22"},{"size":3280,"mtime":1611045777224,"results":"33","hashOfConfig":"22"},{"size":2122,"mtime":1611043090319,"results":"34","hashOfConfig":"22"},{"size":6429,"mtime":1611033880618,"results":"35","hashOfConfig":"22"},{"size":7188,"mtime":1611046272099,"results":"36","hashOfConfig":"22"},{"size":2828,"mtime":1610997481847,"results":"37","hashOfConfig":"22"},{"size":467,"mtime":1611033662174,"results":"38","hashOfConfig":"22"},{"size":1514,"mtime":1611033603325,"results":"39","hashOfConfig":"22"},{"size":513,"mtime":1610999401315,"results":"40","hashOfConfig":"22"},{"size":324,"mtime":1610997267070,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"zg9wt8",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/heoturu/Dev/hwayang/service-register/src/App.js",[],["93","94"],"/Users/heoturu/Dev/hwayang/service-register/src/index.js",[],["95","96"],"/Users/heoturu/Dev/hwayang/service-register/src/components/Button.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/pages/LandingPage.js",["97","98","99"],"import React, { useContext, useEffect, useRef } from 'react';\nimport styled from 'styled-components'\nimport { SettingContext } from '../context/SettingContext'\nimport { CounterContext } from '../context/CounterContext'\nimport { Firebase, db } from '../config/firebaseConfig'\n\nimport Timer from '../components/Timer'\nimport ServiceButton from '../components/ServiceButton'\n// import Footer from '../components/Footer'\n\nconst LandingPage = () => {\n  const [ setting, setSetting ] = useContext(SettingContext)\n  const [ counter, setCounter ] = useContext(CounterContext)\n\n  const remainingRef = useRef(setting.remainingWednesDay)\n\n  useEffect(() => {\n    db.collection('수요예배').doc('1부').collection('20210120').doc('--stats--').onSnapshot((doc) => {\n      const tempCount = doc.data().ReservationCount\n      setCounter({\n        ...counter,\n        remainingWednesDay: tempCount})\n    })\n  }, [remainingRef.current])\n  \n  return (\n    <Container>\n      <Header>화양교회 예배신청 페이지</Header>\n      <SubHeader>\n        <div>아버지께서는 자기에게 이렇게 예배하는 자들을 찾으시느니라</div>\n        <div>(요 4:23)</div>\n      </SubHeader>\n\n      <Timer />\n\n      <ServiceButton \n        days='수요일' \n        title='수요예배' \n        time={[\"7시30분\"]}\n        open={setting.openWednesDay} \n        remaining={[counter.remainingWednesDay]} \n        linkTo=\"/service-register/wednesday\"\n      />\n\n      {/* <ServiceButton \n        days='금요일' \n        title='금요성령집회' \n        time={[\"8시00분\"]}\n        open={setting.openFriDay} \n        remaining={[counter.remainingFriDay]} \n        linkTo=\"/service-register/friday\"\n      /> */}\n\n      <TempButton>\n        <DateContainer>\n          <div style={{fontSize: 24, fontWeight: 700}}>1월</div>\n          <div style={{fontSize: 24, fontWeight: 700}}>22일</div>\n          <div style={{fontSize: 12 }}>금요일</div>\n        </DateContainer>\n        <InfoContainer>\n        <Title>\n          <div style={{fontSize: 24, fontWeight: 700}} >금요성령집회</div>\n        </Title>\n        <div>이번주 금요성령집회는</div> \n        <div>프레이즈데이(청년집회) 관계로 </div> \n        <div>신청불가하며 온라인으로 참여해주세요</div>\n        </InfoContainer>\n      </TempButton>\n\n      <ServiceButton \n        days='일요일' \n        title='주일예배' \n        time={[\"8시00분\", \"9시30분\", \"11시00분\", \"16시00분\"]}\n        open={setting.openSunDay} \n        remaining={[counter.remainingSunDayFirst, counter.remainingSunDaySecond, counter.remainingSunDayThird, counter.remainingSunDayFourth]}\n        linkTo=\"/service-register/sunday\"\n      />\n\n      {/* <Footer /> */}\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 2rem 0 0;\n  font-size: 2.25rem;\n  font-weight: 700;\n\n`;\n\nconst SubHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem 0 2rem;\n  font-size: 1rem;\n  font-weight: 400;\n  flex-wrap: wrap;\n  width: 90%;\n`;\n\nconst TempButton = styled.div`\n  display: flex;\n  flex-direction: row;\n  border-radius: 12px;\n  width: 90%;\n  text-decoration: none;\n  background: #fff;\n  border: 2px #228be6 solid;\n  &:hover {\n    border: 2px red solid;\n  }\n`;\n\nconst DateContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  color: black;\n  border: 2px #228be6 solid;\n  background: #228be6;\n  padding: 1rem 0;\n  border-radius: 9px;\n`;\nconst InfoContainer = styled.div`\n  flex: 3;\n  padding-left: 10px;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem 0.75rem;\n`;\nconst Title = styled.div`\n  padding-bottom: 1rem;\n  color: black;\n`;\n\n\n\n\nexport default LandingPage;","/Users/heoturu/Dev/hwayang/service-register/src/pages/services/FridayService.js",["100"],"import React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components'\nimport { Firebase, db } from '../../config/firebaseConfig'\n\nimport NavBar from '../../components/NavBar'\n\nconst FridayService = (props) => {\n  const [ disabled, setDisabled ] = useState(false)\n  const { register, handleSubmit, errors } = useForm()\n\n  console.log(props)\n\n  const reservationDate = '20210122fri'\n  const increment = Firebase.firestore.FieldValue.increment(1)\n  const statsRef = db.collection(reservationDate).doc('--stats--');\n  const newuserRef = db.collection(reservationDate).doc();\n\n  const batch = db.batch();\n\n  // 초기화 관리자에서 진행해야겠다.\n  // if (!statsDoc.exists) {\n  //   statsRef.set({ storyCount: 0 })\n  // } \n\n\n  const onSubmit = data => {\n    const submitData = {\n      ...data,\n      submitTime: new Date()\n    }\n    return db.runTransaction((transaction) => {\n      return transaction.get(statsRef).then((statsDoc) => {\n        if (statsDoc.data().storyCount < 20){\n          batch.set(newuserRef, submitData);\n          batch.set(statsRef, { storyCount: increment }, {merge: true})\n          batch.commit()\n          return submitData\n        } else {\n          setDisabled(true)\n          alert('신청인원이 넘어 마감되었습니다')\n          return Promise.reject('실패')\n        }\n      })\n    }).then(() => {\n      alert('예배신청에 성공했습니다')\n      setDisabled(true)\n    }).catch((error) => {\n      console.log(error)\n    })\n  }\n\n  let latestDay = new Date();\n  latestDay.setDate(latestDay.getDate() + (5 + 7 - latestDay.getDay()) % 7);\n\n  return (\n    <Container>\n      <NavBar />\n      <Header>{latestDay.getMonth()+1}월 {latestDay.getDate()}일 금요성령집회 신청</Header>\n      <InserForm onSubmit={handleSubmit(onSubmit)} style={{display:'flex', flexDirection:'column'}}>\n        <InputContainer>\n          <Title>이름</Title>\n          <Input name=\"name\" placeholder=\"이름을 입력해주세요\" ref={register({ required: true})}/>\n          {errors.name && <text style={{color: 'red', marginTop: 5, marginLeft: 5}}>이름을 입력해주세요</text>}\n        </InputContainer>\n        <InputContainer>\n          <Title>직분</Title>\n          <Input name=\"position\" placeholder=\"장로/권사/집사/성도/청년/학생\" ref={register({ required: true})} />\n          {errors.position && <text style={{color: 'red', marginTop: 5, marginLeft: 5}}>직분을 입력해주세요</text>}\n        </InputContainer>\n        <InputContainer>\n          <Title>소속</Title>\n          <Input name=\"division\" placeholder=\"남선교회/여선교회/시니어/청장년/영커플/인터치\" ref={register({ required: true})}/>\n          {errors.division && <text style={{color: 'red', marginTop: 5, marginLeft: 5}}>소속을 입력해주세요</text>}\n        </InputContainer>\n        <InputContainer>\n          <SubmitButton type=\"submit\" disabled={disabled}>예배신청하기</SubmitButton>\n        </InputContainer>\n      </InserForm>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 1.5rem 0 0;\n  font-size: 2rem;\n  font-weight: 700;\n`;\n\nconst InserForm = styled.form`\n  padding: 1rem;\n  width: 80%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem 0;\n`;\n\nconst Title = styled.label`\n  width: 100%;\n  margin-bottom: 0.4rem;\n  font-size: 1rem;\n  color: #222;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border-radius: 6px;\n  border: 2px solid #228be6;\n  padding: 0.75rem;\n  outline: none;\n  font-size: 1rem;\n  box-sizing: border-box;\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 0.75rem;\n  margin: 0.75rem 0;\n  color: #fff;\n  background-color: #228be6;\n  border: 2px solid #228be6;\n  border-radius: 4px;\n  outline: none;\n  box-sizing: border-box;\n  font-size: 1rem;\n  font-weight: 600;\n`;\n\nexport default FridayService;",["101","102"],"/Users/heoturu/Dev/hwayang/service-register/src/components/LinkedButton.js",[],["103","104"],"/Users/heoturu/Dev/hwayang/service-register/src/pages/services/WednesdayService.js",["105"],"import React, { useState, useContext } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components'\nimport { Firebase, db } from '../../config/firebaseConfig'\nimport { SettingContext } from '../../context/SettingContext'\n\nimport NavBar from '../../components/NavBar'\n\n\nconst WednesdayService = () => {\n  const [ setting, setSetting ] = useContext(SettingContext)\n  const [ disabled, setDisabled ] = useState(false)\n  const { register, handleSubmit, errors } = useForm()\n  const history = useHistory();\n\n  const decrement = Firebase.firestore.FieldValue.increment(-1)\n  const statsRef = db.collection('수요예배').doc('1부').collection(setting.reservationDate).doc('--stats--');\n  const newuserRef = db.collection('수요예배').doc('1부').collection(setting.reservationDate).doc();\n\n  const batch = db.batch();\n\n  // 초기화 관리자에서 진행해야겠다.\n  // if (!statsDoc.exists) {\n  //   statsRef.set({ ReservationCount: 0 })\n  // } \n\n  const onSubmit = data => {\n    const submitData = {\n      ...data,\n      submitTime: new Date()\n    }\n    return db.runTransaction((transaction) => {\n      return transaction.get(statsRef).then((statsDoc) => {\n        if (statsDoc.data().ReservationCount > 0){\n          batch.set(newuserRef, submitData);\n          batch.set(statsRef, { ReservationCount: decrement }, {merge: true})\n          batch.commit()\n        } else {\n          setDisabled(true)\n          console.log('예약실패')\n          history.push({\n            pathname: \"/service-register/result\", \n            state: {\n              result: false, \n              detail: submitData\n            }\n          })\n          return Promise.reject('실패')\n          \n        }\n      })\n    }).then(() => {\n      setDisabled(true)\n      console.log('예약성공')\n      history.push({\n        pathname: \"/service-register/result\", \n        state: {\n          result: true, \n          detail: submitData\n        }\n      })\n    }).catch((error) => {\n      console.log(error)\n    })\n  }\n\n  let latestDay = new Date();\n  latestDay.setDate(latestDay.getDate() + (3 + 7 - latestDay.getDay()) % 7);\n\n  return (\n    <Container>\n      <NavBar />\n      <Header>{latestDay.getMonth()+1}월 {latestDay.getDate()}일 수요예배 신청</Header>\n      <InserForm onSubmit={handleSubmit(onSubmit)} style={{display:'flex', flexDirection:'column'}}>\n        <InputContainer>\n          <Title>이름</Title>\n          <Input name=\"name\" placeholder=\"이름을 입력해주세요\" ref={register({ required: true})}/>\n          {errors.name && <div style={{color: 'red', marginTop: 5, marginLeft: 5}}>이름을 입력해주세요</div>}\n        </InputContainer>\n        <InputContainer>\n          <Title>직분</Title>\n          <Input name=\"position\" placeholder=\"장로/권사/집사/성도/청년/학생\" ref={register({ required: true})} />\n          {errors.position && <div style={{color: 'red', marginTop: 5, marginLeft: 5}}>직분을 입력해주세요</div>}\n        </InputContainer>\n        <InputContainer>\n          <Title>소속</Title>\n          <Input name=\"division\" placeholder=\"남선교회/여선교회/시니어/청장년/영커플/인터치\" ref={register({ required: true})}/>\n          {errors.division && <div style={{color: 'red', marginTop: 5, marginLeft: 5}}>소속을 입력해주세요</div>}\n        </InputContainer>\n        <InputContainer>\n          <SubmitButton type=\"submit\" disabled={disabled}>예배신청하기</SubmitButton>\n        </InputContainer>\n      </InserForm>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 1.5rem 0 0;\n  font-size: 2rem;\n  font-weight: 700;\n`;\n\nconst InserForm = styled.form`\n  padding: 1rem;\n  width: 80%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem 0;\n`;\n\nconst Title = styled.label`\n  width: 100%;\n  margin-bottom: 0.4rem;\n  font-size: 1rem;\n  color: #222;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border-radius: 6px;\n  border: 2px solid #228be6;\n  padding: 0.75rem;\n  outline: none;\n  font-size: 1rem;\n  box-sizing: border-box;\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 0.75rem;\n  margin: 0.75rem 0;\n  color: #fff;\n  background-color: #228be6;\n  border: 2px solid #228be6;\n  border-radius: 4px;\n  outline: none;\n  box-sizing: border-box;\n  font-size: 1rem;\n  font-weight: 600;\n`;\n\nexport default WednesdayService;","/Users/heoturu/Dev/hwayang/service-register/src/pages/services/SundayService.js",[],["106","107"],"/Users/heoturu/Dev/hwayang/service-register/src/components/NavBar.js",["108","109"],"/Users/heoturu/Dev/hwayang/service-register/src/config/firebaseConfig.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/components/Footer.js",[],["110","111"],"/Users/heoturu/Dev/hwayang/service-register/src/components/Timer.js",["112"],"/Users/heoturu/Dev/hwayang/service-register/src/pages/ResultPage.js",["113"],"/Users/heoturu/Dev/hwayang/service-register/src/components/ServiceButton.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/pages/AdminPage.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/pages/AuthPage.js",["114"],"import React, { useContext } from 'react';\nimport styled from 'styled-components'\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext'\nimport { auth } from '../config/firebaseConfig'\n\nimport NavBar from '../components/NavBar'\n\n\n\nconst AuthPage = () => {\n  const { register, handleSubmit, errors } = useForm()\n  const [ isLoggedIn, setIsLoggedIn ] = useContext(UserContext)\n  const history = useHistory();\n\n  const onSubmit = async (data) => {\n    try {\n      await auth.signInWithEmailAndPassword(data.email, data.password)\n      console.log(\"LOGIN SUCCESS\")\n      setIsLoggedIn(true)\n      history.push({\n        pathname: \"/service-register/admin\", \n      })\n    } catch (error) {\n      console.log(\"Error @SignIn: \", error)\n   }\n  }\n\n  return (\n    <Container>\n      <NavBar />\n      <Header>관리자 페이지 로그인</Header>\n      <InserForm onSubmit={handleSubmit(onSubmit)} style={{display:'flex', flexDirection:'column'}}>\n        <InputContainer>\n          <Title>이메일</Title>\n          <Input name=\"email\" ref={register({ required: true})}/>\n          {errors.email && <div style={{color: 'red', marginTop: 5, marginLeft: 5}}>이메일을 입력해주세요</div>}\n        </InputContainer>\n        <InputContainer>\n          <Title>비밀번호</Title>\n          <Input name=\"password\" type=\"password\" ref={register({ required: true})} />\n          {errors.password && <div style={{color: 'red', marginTop: 5, marginLeft: 5}}>비밀번호를 입력해주세요</div>}\n        </InputContainer>\n        <InputContainer>\n          <SubmitButton type=\"submit\">관리자 로그인</SubmitButton>\n        </InputContainer>\n      </InserForm>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 1.5rem 0 0;\n  font-size: 2rem;\n  font-weight: 700;\n`;\n\nconst InserForm = styled.form`\n  padding: 1rem;\n  width: 80%;\n  display: flex;\n  justify-content: center;\n\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem 0;\n`;\n\nconst Title = styled.label`\n  width: 100%;\n  margin-bottom: 0.4rem;\n  font-size: 1rem;\n  color: #222;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border-radius: 6px;\n  border: 2px solid #228be6;\n  padding: 0.75rem;\n  outline: none;\n  font-size: 1rem;\n  box-sizing: border-box;\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 0.75rem;\n  margin: 0.75rem 0;\n  color: #fff;\n  background-color: #228be6;\n  border: 2px solid #228be6;\n  border-radius: 4px;\n  outline: none;\n  box-sizing: border-box;\n  font-size: 1rem;\n  font-weight: 600;\n`;\n\nexport default AuthPage;","/Users/heoturu/Dev/hwayang/service-register/src/context/SettingContext.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/pages/LoadingPage.js",[],["115","116"],"/Users/heoturu/Dev/hwayang/service-register/src/context/CounterContext.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/context/UserContext.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"117","replacedBy":"121"},{"ruleId":"119","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":5,"column":10,"nodeType":"125","messageId":"126","endLine":5,"endColumn":18},{"ruleId":"123","severity":1,"message":"127","line":12,"column":20,"nodeType":"125","messageId":"126","endLine":12,"endColumn":30},{"ruleId":"128","severity":1,"message":"129","line":24,"column":6,"nodeType":"130","endLine":24,"endColumn":28,"suggestions":"131"},{"ruleId":"123","severity":1,"message":"132","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":20},{"ruleId":"117","replacedBy":"133"},{"ruleId":"119","replacedBy":"134"},{"ruleId":"117","replacedBy":"135"},{"ruleId":"119","replacedBy":"136"},{"ruleId":"123","severity":1,"message":"127","line":12,"column":20,"nodeType":"125","messageId":"126","endLine":12,"endColumn":30},{"ruleId":"117","replacedBy":"137"},{"ruleId":"119","replacedBy":"138"},{"ruleId":"123","severity":1,"message":"139","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":21},{"ruleId":"123","severity":1,"message":"140","line":9,"column":23,"nodeType":"125","messageId":"126","endLine":9,"endColumn":24},{"ruleId":"117","replacedBy":"141"},{"ruleId":"119","replacedBy":"142"},{"ruleId":"128","severity":1,"message":"143","line":58,"column":6,"nodeType":"130","endLine":58,"endColumn":12,"suggestions":"144"},{"ruleId":"123","severity":1,"message":"145","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":14},{"ruleId":"123","severity":1,"message":"146","line":14,"column":11,"nodeType":"125","messageId":"126","endLine":14,"endColumn":21},{"ruleId":"117","replacedBy":"147"},{"ruleId":"119","replacedBy":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],["149"],["150"],"no-unused-vars","'Firebase' is defined but never used.","Identifier","unusedVar","'setSetting' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'counter' and 'setCounter'. Either include them or remove the dependency array. Mutable values like 'remainingRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["151"],"'useHistory' is defined but never used.",["149"],["150"],["149"],["150"],["149"],["150"],"'ArrowBackIcon' is defined but never used.","'_' is assigned a value but never used.",["149"],["150"],"React Hook useEffect has a missing dependency: 'startTimer'. Either include it or remove the dependency array.",["152"],"'Button' is defined but never used.","'isLoggedIn' is assigned a value but never used.",["149"],["150"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [counter, setCounter]",{"range":"157","text":"158"},"Update the dependencies array to be: [startTimer, stop]",{"range":"159","text":"160"},[889,911],"[counter, setCounter]",[1789,1795],"[startTimer, stop]"]