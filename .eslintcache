[{"/Users/heoturu/Dev/hwayang/service-register/src/pages/AdminPage.js":"1","/Users/heoturu/Dev/hwayang/service-register/src/pages/ResultPage.js":"2","/Users/heoturu/Dev/hwayang/service-register/src/context/SettingContext.js":"3","/Users/heoturu/Dev/hwayang/service-register/src/pages/LandingPage.js":"4","/Users/heoturu/Dev/hwayang/service-register/src/components/Timer.js":"5","/Users/heoturu/Dev/hwayang/service-register/src/components/SundayServiceButton.js":"6","/Users/heoturu/Dev/hwayang/service-register/src/pages/LoadingPage.js":"7","/Users/heoturu/Dev/hwayang/service-register/src/App.js":"8","/Users/heoturu/Dev/hwayang/service-register/src/context/UserContext.js":"9","/Users/heoturu/Dev/hwayang/service-register/src/pages/services/SundayService.js":"10","/Users/heoturu/Dev/hwayang/service-register/src/components/Button.js":"11","/Users/heoturu/Dev/hwayang/service-register/src/components/LinkedButton.js":"12","/Users/heoturu/Dev/hwayang/service-register/src/pages/services/WednesdayService.js":"13","/Users/heoturu/Dev/hwayang/service-register/src/index.js":"14","/Users/heoturu/Dev/hwayang/service-register/src/components/NavBarForAdmin.js":"15","/Users/heoturu/Dev/hwayang/service-register/src/components/WeekdayServiceButton.js":"16","/Users/heoturu/Dev/hwayang/service-register/src/config/firebaseConfig.js":"17","/Users/heoturu/Dev/hwayang/service-register/src/pages/services/FridayService.js":"18","/Users/heoturu/Dev/hwayang/service-register/src/components/NavBar.js":"19","/Users/heoturu/Dev/hwayang/service-register/src/pages/AuthPage.js":"20"},{"size":18903,"mtime":1611757360580,"results":"21","hashOfConfig":"22"},{"size":10242,"mtime":1611759337876,"results":"23","hashOfConfig":"22"},{"size":924,"mtime":1611592141739,"results":"24","hashOfConfig":"22"},{"size":9004,"mtime":1611797789661,"results":"25","hashOfConfig":"22"},{"size":2948,"mtime":1611758069567,"results":"26","hashOfConfig":"22"},{"size":7599,"mtime":1611796732488,"results":"27","hashOfConfig":"22"},{"size":2491,"mtime":1611592202391,"results":"28","hashOfConfig":"22"},{"size":2180,"mtime":1611424264676,"results":"29","hashOfConfig":"22"},{"size":346,"mtime":1611424264679,"results":"30","hashOfConfig":"22"},{"size":5145,"mtime":1611762563314,"results":"31","hashOfConfig":"22"},{"size":464,"mtime":1610987119417,"results":"32","hashOfConfig":"22"},{"size":565,"mtime":1611504694599,"results":"33","hashOfConfig":"22"},{"size":3753,"mtime":1611584739244,"results":"34","hashOfConfig":"22"},{"size":199,"mtime":1610988703278,"results":"35","hashOfConfig":"22"},{"size":1229,"mtime":1611584739241,"results":"36","hashOfConfig":"22"},{"size":3318,"mtime":1611580284557,"results":"37","hashOfConfig":"22"},{"size":590,"mtime":1610997455259,"results":"38","hashOfConfig":"22"},{"size":3755,"mtime":1611584739244,"results":"39","hashOfConfig":"22"},{"size":1214,"mtime":1611584739241,"results":"40","hashOfConfig":"22"},{"size":2876,"mtime":1611584739242,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"zg9wt8",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/heoturu/Dev/hwayang/service-register/src/pages/AdminPage.js",["89"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport { db } from '../config/firebaseConfig'\n\nimport NavBarForAdmin from '../components/NavBarForAdmin'\nimport Button from '../components/Button'\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nfunction fillZero(width, str){\n  return str.length >= width ? str:new Array(width-str.length+1).join('0')+str;//남는 길이만큼 0으로 채움\n}\n\nconst AdminPage = () => {\n  const [ userlist, setUserlist ] = useState(false)\n  const [ latestSetting, setLatestSetting ] = useState(null)\n  const [ forcingCloseWed, setForcingCloseWed ] = useState(false)\n  const [ forcingCloseFri, setForcingCloseFri ] = useState(false)\n  const [ forcingCloseSun, setForcingCloseSun ] = useState(false)\n  const [ seats, setSeats ] = useState({\n    wednesday: 70,\n    friday: 70,\n    sundayOne: 70,\n    sundayTwo: 70,\n    sundayThree: 70,\n    sundayFour: 70,\n    sundaySix: 70,\n  })\n  const [ comments, setComments ] = useState({\n    commentWed: \"\",\n    commentFri: \"\",\n    commentSunOne: \"\",\n    commentSunTwo: \"\",\n    commentSunThree: \"\",\n    commentSunFour: \"\",\n    commentSunSix: \"\",\n  })\n\n  const loadSettings = () => {\n    db.collection('setting').doc('latest').get().then((doc) => {\n      if (doc.exists) {\n        console.log(\"Setting data:\", doc.data());\n        setLatestSetting(doc.data())\n      } else {\n        console.log(\"No such document!\");\n      }\n    }).catch((error) => {\n      console.log(\"Error @loadSettings: \", error)\n    })\n  }\n\n  useEffect(() => {\n    console.log('세팅값 불러오는 중')\n    if (latestSetting === null) {\n      loadSettings()\n    }\n  }, [latestSetting])\n\n\n\n  const batch = db.batch();\n  \n  let wednesday = new Date();\n  wednesday.setDate(wednesday.getDate() + (3 + 7 - wednesday.getDay()) % 7);\n  const wednesdayString = `${wednesday.getFullYear()}${fillZero(2, (wednesday.getMonth()+1).toString())}${wednesday.getDate()}`\n\n  let friday = new Date();\n  friday.setDate(friday.getDate() + (5 + 7 - friday.getDay()) % 7);\n  const fridayString = `${friday.getFullYear()}${fillZero(2, (friday.getMonth()+1).toString())}${friday.getDate()}`\n\n  let sunday = new Date();\n  sunday.setDate(sunday.getDate() + (0 + 7 - sunday.getDay()) % 7);\n  const sundayString = `${sunday.getFullYear()}${fillZero(2, (sunday.getMonth()+1).toString())}${sunday.getDate()}`\n\n  \n\n  const onClickWeekday = () => {\n      const wedRef = db.collection('수요예배').doc('1부').collection(wednesdayString).doc('--stats--')\n      const friRef = db.collection('금요성령집회').doc('1부').collection(fridayString).doc('--stats--')\n      const settingRef = db.collection('setting').doc('latest')\n      batch.set(wedRef, { ReservationCount: seats.wednesday })\n      batch.set(friRef, { ReservationCount: seats.friday })\n      batch.update(settingRef, {\n        isWeekday: true,\n        wednesday: wednesdayString,\n        friday: fridayString,\n        sunday: \"\",\n        TimerWednesDay: [wednesday.getFullYear(), wednesday.getMonth(), wednesday.getDate()-1, 19, 0],\n        TimerFriDay: [friday.getFullYear(), friday.getMonth(), friday.getDate()-3, 20, 0],\n        TimerSunDay: \"\",\n        forcingCloseWed: forcingCloseWed,\n        forcingCloseFri: forcingCloseFri,\n        wednesDaySeats: parseInt(seats.wednesday),\n        fridaySeats: parseInt(seats.friday),\n        sundayOneSeats: \"\",\n        sundayTwoSeats: \"\",\n        sundayThreeSeats: \"\",\n        sundayFourSeats: \"\",\n        sundaySixSeats: \"\",\n        commentWed: comments.commentWed,\n        commentFri: comments.commentFri,\n        commentSunOne: \"\",\n        commentSunTwo: \"\",\n        commentSunThree: \"\",\n        commentSunFour: \"\",\n        commentSunSix: \"\",\n      })\n      batch.commit()\n      .then(() => {\n        console.log(\"Document successfully written!\");\n        alert('업데이트 성공했습니다')\n      })\n      .catch((error) => {\n        console.error(\"Error writing document: \", error);\n        alert('업데이트 실패했습니다')\n      });\n  }\n\n\n  const onClickSunDay = () => {\n    const firstRef = db.collection('주일예배').doc('1부').collection(sundayString).doc('--stats--')\n    const secondRef = db.collection('주일예배').doc('2부').collection(sundayString).doc('--stats--')\n    const thirdRef = db.collection('주일예배').doc('3부').collection(sundayString).doc('--stats--')\n    const forthRef = db.collection('주일예배').doc('4부').collection(sundayString).doc('--stats--')\n    const sixthRef = db.collection('주일예배').doc('6부').collection(sundayString).doc('--stats--')\n    const settingRef = db.collection('setting').doc('latest')\n    batch.set(firstRef, { ReservationCount: seats.sundayOne })\n    batch.set(secondRef, { ReservationCount: seats.sundayTwo })\n    batch.set(thirdRef, { ReservationCount: seats.sundayThree })\n    batch.set(forthRef, { ReservationCount: seats.sundayFour })\n    batch.set(sixthRef, { ReservationCount: seats.sundaySix })\n    batch.update(settingRef, {\n      isWeekday: false,\n      wednesday: \"\",\n      friday: \"\",\n      sunday: sundayString,\n      TimerWednesDay: \"\",\n      TimerFriDay: \"\",\n      TimerSunDay: [sunday.getFullYear(), sunday.getMonth(), sunday.getDate()-3, 19, 0],\n      forcingCloseWed: false,\n      forcingCloseFri: false,\n      wednesDaySeats: \"\",\n      fridaySeats: \"\",\n      sundayOneSeats: parseInt(seats.sundayOne),\n      sundayTwoSeats: parseInt(seats.sundayTwo),\n      sundayThreeSeats: parseInt(seats.sundayThree),\n      sundayFourSeats: parseInt(seats.sundayFour),\n      sundaySixSeats: parseInt(seats.sundaySix),\n      commentWed: \"\",\n      commentFri: \"\",\n      commentSunOne: comments.commentSunOne,\n      commentSunTwo: comments.commentSunTwo,\n      commentSunThree: comments.commentSunThree,\n      commentSunFour: comments.commentSunFour,\n      commentSunSix: comments.commentSunSix,\n    })\n    batch.commit()\n    .then(() => {\n      console.log(\"Document successfully written!\");\n      alert('업데이트 성공했습니다')\n    })\n    .catch((error) => {\n      console.error(\"Error writing document: \", error);\n      alert('업데이트 실패했습니다')\n    });\n  }\n\n  const onClickLookUp = (title, time, date) => {\n    db.collection(title).doc(time).collection(date).orderBy(\"submitTime\").get().then((querySnapshot) => {\n      let tempArray = []\n       querySnapshot.forEach((doc) => {\n         tempArray.push({\n          id: doc.id,\n          ...doc.data()\n         })\n      })\n      setUserlist(tempArray)\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  const converTime = (timestamp) => {\n    let date = new Date(timestamp * 1000)\n    let hours = date.getHours();\n    let minutes = \"0\" + date.getMinutes();\n    let seconds = \"0\" + date.getSeconds();\n    let formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n    return formattedTime\n  }\n\n  const onForingCloseClick = (days) => {\n    if (days === \"수요일\") {\n      setForcingCloseWed(!forcingCloseWed)\n    } else if (days === \"금요일\") {\n      setForcingCloseFri(!forcingCloseFri)\n    } else if (days === \"주일\") {\n      setForcingCloseSun(!forcingCloseSun)\n    }\n  }\n\n  const onSeatsChange = (e) => {\n    const { value, name } = e.target\n    setSeats({\n      ...seats,\n      [name]: value\n    })\n  }\n\n  const onCommentChange = (e) => {\n    const { value, name } = e.target\n    setComments({\n      ...comments,\n      [name]: value\n    })\n  }\n\n\n  return (\n    <Container>\n      <NavBarForAdmin />\n\n      <div style={{fontSize: 16, fontWeight: 600, marginBottom: 24, marginTop: 24, backgroundColor:'lightgray', padding: 10}}>현재 세팅 상태</div>\n        <div>{latestSetting==null ? \"\" : latestSetting.isWeekday ? \"현재 주중예배(수/금)가 세팅되어 있습니다.\" : \"주일예배가 세팅되어 있습니다.\"}</div>\n        \n      <div style={{fontSize: 16, fontWeight: 600, marginBottom: 24, marginTop: 24, backgroundColor:'lightgray', padding: 10}}>다음 신청 세팅하기</div>\n      <SettingContainer>\n        <div>주중예배세팅</div>\n        <Setting>\n          <div>수요예배</div>\n          <Title>날짜 : {wednesday.getFullYear()}년 {wednesday.getMonth()+1}월 {wednesday.getDate()}일</Title>\n          <Title>타이머시간 : {forcingCloseWed ? '강제종료' : `${wednesday.getFullYear()}년 ${wednesday.getMonth()+1}월 ${wednesday.getDate()-1}일 19시`}</Title>\n          <Title>좌석수 : {seats.wednesday}</Title>\n        </Setting>\n        <Setting>\n          <div>금요예배</div>\n          <Title>날짜 : {friday.getFullYear()}년 {friday.getMonth()+1}월 {friday.getDate()}일</Title>\n          <Title>타이머시간 : {forcingCloseFri ? '강제종료' : `${friday.getFullYear()}년 ${friday.getMonth()+1}월 ${friday.getDate()-3}일 20시`}</Title>\n          <Title>좌석수 : {seats.friday}</Title>\n        </Setting>\n        <div style={{borderTop: '1px solid black', marginBottom: 10}}/>\n        <div>\n          <div style={{display: 'flex', flexDirection: 'row', marginBottom: 10, alignItems: 'center'}}>\n            <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: 60}}>수요예배 좌석조정</div>\n            <input name=\"wednesday\" value={seats.wednesday} onChange={onSeatsChange} style={{width: 50}}/>\n            <div style={{marginLeft: 10, marginRight: 10, display:'flex', flexWrap:'wrap', width: 60}}>금요예배 좌석조정</div>\n            <input name=\"friday\" value={seats.friday} onChange={onSeatsChange} style={{width: 50, marginRight: 30}}/>\n            <button onClick={() => onForingCloseClick('수요일')} style={{marginRight: 20}}>수요예배 강제닫기</button>\n            <button onClick={() => onForingCloseClick('금요일')}>금요예배 강제닫기</button>\n          </div>\n          <div style={{display:'flex', marginBottom: 10}}>\n          <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: '15%'}}>수요예배 이벤트입력</div>\n          <input \n            name=\"commentWed\" \n            value={comments.commentWed} \n            onChange={onCommentChange} \n            style={{width: '30%', marginRight: 30}}\n          />\n          <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: '15%'}}>금요예배 이벤트입력</div>\n          <input \n            name=\"commentFri\" \n            value={comments.commentFri} \n            onChange={onCommentChange} \n            style={{width: '30%', marginRight: 30}}\n          />\n          </div>\n\n          <button \n            style={{backgroundColor: 'red', border: '2px solid black', padding: 10, font: 20, fontWeight: 600}}\n            onClick={() => onClickWeekday()}\n          >\n            주중예배 세팅 업데이트\n          </button>\n        </div>\n      </SettingContainer>\n      <div style={{borderTop: '2px solid black', marginBottom: 10}}/>\n      <SettingContainer>\n        <div>주일예배세팅</div>\n        <Setting>\n          <Title>날짜 : {sunday.getFullYear()}년 {sunday.getMonth()+1}월 {sunday.getDate()}일</Title>\n          <Title>타이머시간 : {forcingCloseWed ? '강제종료' : `${sunday.getFullYear()}년 ${sunday.getMonth()+1}월 ${sunday.getDate()-3}일 19시`}</Title>\n        </Setting>\n        <Setting>\n          <Title>1부 좌석수 : {seats.sundayOne}</Title>\n          <Title>2부 좌석수 : {seats.sundayTwo}</Title>\n          <Title>3부 좌석수 : {seats.sundayThree}</Title>\n          <Title>4부 좌석수 : {seats.sundayFour}</Title>\n          <Title>6부 좌석수 : {seats.sundaySix}</Title>\n        </Setting>\n        <div style={{borderTop: '1px solid black', marginBottom: 10}} />\n        <div>\n          <div style={{display: 'flex', flexDirection: 'row', marginBottom: 10, alignItems: 'center'}}>\n            <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: 60}}>1부예배 좌석조정</div>\n            <input name=\"sundayOne\" value={seats.sundayOne} onChange={onSeatsChange}  style={{width: 30, marginRight: 10}}/>\n            <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: 60}}>2부예배 좌석조정</div>\n            <input name=\"sundayTwo\" value={seats.sundayTwo} onChange={onSeatsChange}  style={{width: 30, marginRight: 10}}/>\n            <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: 60}}>3부예배 좌석조정</div>\n            <input name=\"sundayThree\" value={seats.sundayThree} onChange={onSeatsChange}  style={{width: 30, marginRight: 10}}/>\n            <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: 60}}>4부예배 좌석조정</div>\n            <input name=\"sundayFour\" value={seats.sundayFour} onChange={onSeatsChange} style={{width: 30, marginRight: 10}}/>\n            <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: 60}}>6부예배 좌석조정</div>\n            <input name=\"sundaySix\" value={seats.sundaySix} onChange={onSeatsChange} style={{width: 30, marginRight: 10}}/>\n          </div>\n          <div style={{display:'flex', marginBottom: 10, flexDirection:'column'}}>\n            <div style={{display:'flex', marginBottom: 10, flexDirection:'row'}}>\n              <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: '25%', alignItems: 'center'}}>1부예배 이벤트입력</div>\n              <input \n                name=\"commentSunOne\" \n                value={comments.commentSunOne} \n                onChange={onCommentChange} \n                style={{width: '70%', height: '1.5rem'}}\n              />\n            </div>\n\n            <div style={{display:'flex', marginBottom: 10, flexDirection:'row'}}>\n            <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: '25%', alignItems: 'center'}}>2부예배 이벤트입력</div>\n              <input \n                name=\"commentSunTwo\" \n                value={comments.commentSunTwo} \n                onChange={onCommentChange} \n                style={{width: '70%', height: '1.5rem'}}\n              />\n            </div>\n\n            <div style={{display:'flex', marginBottom: 10, flexDirection:'row'}}>\n            <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: '25%', alignItems: 'center'}}>3부예배 이벤트입력</div>\n              <input \n                name=\"commentSunThree\" \n                value={comments.commentSunThree} \n                onChange={onCommentChange} \n                style={{width: '70%', height: '1.5rem'}}\n              />\n            </div>\n\n            <div style={{display:'flex', marginBottom: 10, flexDirection:'row'}}>\n            <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: '25%', alignItems: 'center'}}>4부예배 이벤트입력</div>\n              <input \n                name=\"commentSunFour\" \n                value={comments.commentSunFour} \n                onChange={onCommentChange} \n                style={{width: '70%', height: '1.5rem'}}\n              />\n            </div>\n\n            <div style={{display:'flex', marginBottom: 10, flexDirection:'row'}}>\n            <div style={{marginRight: 10, display:'flex', flexWrap:'wrap', width: '25%', alignItems: 'center'}}>6부예배 이벤트입력</div>\n              <input \n                name=\"commentSunSix\" \n                value={comments.commentSunSix} \n                onChange={onCommentChange} \n                style={{width: '70%', height: '1.5rem'}}\n              />\n            </div>\n          </div>\n\n          <button \n            style={{backgroundColor: 'red', border: '2px solid black', padding: 10, font: 20, fontWeight: 600}}\n            onClick={() => onClickSunDay()}\n          >\n            주일예배 세팅 업데이트\n          </button>\n        </div>\n      </SettingContainer>\n\n      <div style={{fontSize: 16, fontWeight: 600, marginBottom: 28, marginTop: 28, backgroundColor:'lightgray', padding: 10}}>신청자 명단 확인</div>\n      \n      <LookupContainer>\n        <LookupButton onClick={() => onClickLookUp('수요예배', '1부', wednesdayString)}>수요예배</LookupButton>\n        <LookupButton onClick={() => onClickLookUp('금요성령집회', '1부', fridayString)}>금요예배</LookupButton>\n        <LookupButton onClick={() => onClickLookUp('주일예배', '1부', sundayString)}>1부조회</LookupButton>\n        <LookupButton onClick={() => onClickLookUp('주일예배', '2부', sundayString)}>2부조회</LookupButton>\n        <LookupButton onClick={() => onClickLookUp('주일예배', '3부', sundayString)}>3부조회</LookupButton>\n        <LookupButton onClick={() => onClickLookUp('주일예배', '4부', sundayString)}>4부조회</LookupButton>\n        <LookupButton onClick={() => onClickLookUp('주일예배', '6부', sundayString)}>6부조회</LookupButton>\n      </LookupContainer>\n      \n\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\" style={{minWidth: 250}}>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">순서</TableCell>\n              <TableCell align=\"center\">이름</TableCell>\n              <TableCell align=\"center\">직분</TableCell>\n              <TableCell align=\"center\">소속(선교회)</TableCell>\n              <TableCell align=\"center\">시간</TableCell>\n            </TableRow>\n          </TableHead>\n          {userlist && (\n            <>\n            {userlist.map((user, index) => (\n              <TableBody>\n                <TableRow key={index}>\n                  <TableCell align=\"center\">{index}</TableCell>\n                  <TableCell align=\"center\">{user.name}</TableCell>\n                  <TableCell align=\"center\">{user.position}</TableCell>\n                  <TableCell align=\"center\">{user.division}</TableCell>\n                  <TableCell align=\"center\">{converTime(user.submitTime)}</TableCell>\n                </TableRow>\n              </TableBody>\n            ))}  \n            </>\n          )}\n        </Table>\n      </TableContainer>\n    </Container>\n    \n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center;\n  align-items: center; */\n`;\n\nconst SettingContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Setting = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 10px 0;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n  padding-left: 1rem;\n`;\n\nconst LookupContainer = styled.div`\n  margin-bottom: 1rem;\n  display: flex;\n`;\n\nconst LookupButton = styled.button`\n  border: 2px solid #228be6;\n  padding: 1rem;\n  margin: 0 1rem;\n`;\n\n\n\n\nexport default AdminPage;",["90","91"],"/Users/heoturu/Dev/hwayang/service-register/src/pages/ResultPage.js",["92","93"],"import React, { useEffect, useContext, useState } from 'react';\nimport styled from 'styled-components'\nimport { useLocation } from \"react-router-dom\";\n\nimport NavBar from '../components/NavBar'\n\nimport { SettingContext } from '../context/SettingContext'\nimport { Firebase, db } from '../config/firebaseConfig'\n\nconst VIEW_HEIGHT = window.innerHeight\n\nconst ResultPage = () => {\n  const [ result, setResult ] = useState(null)\n  const [ setting, setSetting ] = useContext(SettingContext)\n  const location = useLocation();\n  const registerData = location.payload\n\n  const onClickClose = () => {\n    window.open('','_self').close(); \n    // 모바일에서 페이지 닫기\n    window.location.href=\"kakaotalk://inappbrowser/close\"\n  }\n\n  const sendingData = async () => {\n    const submitData = {\n      name: registerData.name,\n      position: registerData.position,\n      division: registerData.division,\n      submitTime:registerData.submitTime,\n      index: 0\n    }\n\n    const statsRef = db.collection(registerData.title).doc(registerData.serviceTime).collection(registerData.reservationDate).doc('--stats--');\n    const newuserRef = db.collection(registerData.title).doc(registerData.serviceTime).collection(registerData.reservationDate).doc();\n    const userListRef = db.collection(registerData.title).doc(registerData.serviceTime).collection(registerData.reservationDate)\n    const decrement = Firebase.firestore.FieldValue.increment(-1)\n\n    let query = userListRef.where(\"name\", \"==\", registerData.name).where(\"position\", \"==\", registerData.position);\n    query.get().then(querySnapshot => {\n      if (querySnapshot.empty) {\n        console.log('등록진행 계속')\n        db.runTransaction((transaction) => {\n          return transaction.get(statsRef).then((statsDoc) => {\n            if (!statsDoc.exists) {\n              console.log('Document does not exist')\n            } \n            if (statsDoc.data().ReservationCount > 0) {\n              const remainingCount = statsDoc.data().ReservationCount\n              transaction.update(statsRef, { ReservationCount: decrement }, { merge: true })\n              transaction.set(newuserRef, {\n                ...submitData,\n                index: Math.abs(remainingCount - 70) + 1,\n              }) \n              }\n            }).then(() => {\n              console.log(\"Transaction successfully committed!\")\n            }).catch((error) => {\n              console.log(\"Transaction failed: \", error)\n            })\n        })\n      } else {\n        console.log('중복자로 인한 등록진행 중단')\n      }\n    })\n  }\n\n  const checkResult = () => {\n    const userListRef = db.collection(registerData.title).doc(registerData.serviceTime).collection(registerData.reservationDate)\n    let indexQuery = userListRef.where(\"index\", \"==\", 70)\n    let query = userListRef.where(\"name\", \"==\", registerData.name).where(\"position\", \"==\", registerData.position);\n    query.get().then(querySnapshot => {\n      if (querySnapshot.empty) {\n        console.log('DB에 없음')\n        setResult(false)\n      } else {\n        querySnapshot.forEach((doc) => {\n          if (doc.data().index < 70) {\n            console.log('선착순 당첨')\n            setResult(true)\n          } else if (doc.data().index === 70) {\n            indexQuery.get().then((querySnapshot) => {\n              let tempArray = []\n              querySnapshot.forEach((doc, idx) => {\n                tempArray.push({\n                 id: doc.id,\n                 order: idx,\n                 ...doc.data()\n                })\n             })\n             tempArray.sort((a, b) => {\n               return a.submitTime - b.submitTime\n             })\n             if (tempArray[0].name === registerData.name) {\n              console.log('선착순 당첨')\n              setResult(true)\n             } else {\n              console.log('제출시간에서 밀림')\n              setResult(false)\n             }\n            })\n          } else {\n            console.log('70명 이후 신청자')\n            setResult(false)\n          }\n        })\n      }\n    })\n  }\n\n  useEffect(async () => {\n    console.log('전송중...')\n    if (setting.isSubmitting) {\n      await sendingData()\n      await setSetting({\n        ...setting,\n        isSubmitting: false\n      })\n    }\n  }, [])\n  \n\n  return (\n    <Container>\n      <NavBar />\n      <ResultContainer style={{height: VIEW_HEIGHT}}>\n        {setting.isSubmitting ? (\n          <>\n            <div>...처리중...</div>\n            <div>잠시만 기다려주세요</div>\n          </>\n        ) : (\n          <>\n          {result == null ? (\n            <CheckContainer>\n              <CheckButton onClick={() => checkResult()}>결과확인</CheckButton>\n              <div style={{fontSize: '1.25rem', marginBottom: '0.25rem', textAlign:'center'}}>결과 확인 버튼을</div>\n              <div style={{fontSize: '1.25rem', marginBottom: '0.25rem', textAlign:'center'}}>눌러주세요!</div>\n            </CheckContainer>\n          ) : (\n            <>\n            {result ? (\n              <>\n                <div style={{fontSize: '1.5rem', marginBottom: '0.5rem'}}>{registerData.name} {registerData.position}님 </div>\n                {setting.isWeekday ? (\n                  <div style={{fontSize: '1.5rem', marginBottom: '0.5rem', color: 'blue'}}>{registerData.title} 신청에 성공하셨습니다.</div>\n                ) : (\n                  <div style={{fontSize: '1.5rem', marginBottom: '0.5rem', color: 'blue'}}>{registerData.title} {registerData.serviceTime} 신청에 성공하셨습니다.</div>\n                )}\n                <div style={{fontSize: '1.25rem', marginBottom: '2rem'}}>많은 은혜 받으시길 바랍니다</div>\n\n                <CloseButton onClick={onClickClose}>페이지 닫기</CloseButton>\n                <div \n                  style={{width: '90%', display:'flex', flexWrap:'wrap', textAlign:'center', justifyContent: 'center', marginBottom: '0.5rem'}}\n                >\n                  뒤로 가기 버튼만 누르지 마시고 창을 닫아 주세요 *^^*\n                </div>\n                <div \n                  style={{width: '90%', display:'flex', flexWrap:'wrap', textAlign:'center', justifyContent: 'center'}}\n                >\n                  담당교역자가 개인별로 오늘 10시안에 확인 메시지 보내 드리겠습니다\n                </div>\n              </>\n            ) : (\n              <>\n                <div style={{fontSize: '1.5rem', marginBottom: '0.5rem'}}>{registerData.name} {registerData.position}님 </div>\n                <div style={{fontSize: '1.5rem', marginBottom: '0.5rem'}}>죄송합니다.</div>\n                {setting.isWeekday ? (\n                  <div style={{fontSize: '1.5rem', marginBottom: '0.5rem', color: 'blue'}}>{registerData.title} 신청이 마감되었습니다.</div>\n                ) : (\n                  <div style={{fontSize: '1.5rem', marginBottom: '0.5rem', color: 'blue'}}>{registerData.title} {registerData.serviceTime} 신청이 마감되었습니다.</div>\n                )}\n\n                <CloseButton onClick={onClickClose}>페이지 닫기</CloseButton>\n                <div \n                  style={{width: '90%', display:'flex', flexWrap:'wrap', textAlign:'center', justifyContent: 'center', marginBottom: '0.5rem'}}\n                >\n                  뒤로 가기 버튼만 누르지 마시고 창을 닫아 주세요 *^^*\n                </div>\n                <div \n                  style={{width: '90%', display:'flex', flexWrap:'wrap', textAlign:'center', justifyContent: 'center'}}\n                >\n                  담당교역자가 개인별로 오늘 10시안에 확인 메시지 보내 드리겠습니다\n                </div>\n              </>\n            )}\n            </>\n          )}\n          </>\n        )}\n      </ResultContainer>\n    </Container>\n\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CheckContainer = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst CheckButton = styled.div`\n  margin-bottom: 1rem; \n  background-color: #4D826C;\n  padding: 0.75rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  font-size: 1.5rem;\n  font-weight: 600;\n  border-radius: 16px;\n`;\n\nconst CloseButton = styled.div`\n  margin: 20px 0;\n  border: 2px solid #228be6;\n  color: #222;\n  padding: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default ResultPage;\n\n\n\n\n\n// const decrement = Firebase.firestore.FieldValue.increment(-1)\n//   const batch = db.batch();\n\n//   const onSubmit = async data => {\n//     if (setting.isSubmitting){\n\n//       const submitData = {\n//         ...data,\n//         submitTime: new Date()\n//       }\n//       const statsRef = db.collection('수요예배').doc('1부').collection(setting.reservationDate).doc('--stats--');\n//       const newuserRef = db.collection('수요예배').doc('1부').collection(setting.reservationDate).doc();\n//       return db.runTransaction((transaction) => {\n//         return transaction.get(statsRef).then((statsDoc) => {\n//           if (statsDoc.data().ReservationCount > 0){\n//             batch.set(newuserRef, submitData);\n//             batch.set(statsRef, { ReservationCount: decrement }, {merge: true})\n//             batch.commit()\n//           } else {\n//             console.log('예약실패')\n//             history.push({\n//               pathname: \"/service-register/result\", \n//               state: {\n//                 result: false, \n//                 detail: submitData\n//               }\n//             })\n//             return Promise.reject('실패')\n            \n//           }\n//         })\n//       }).then(() => {\n//         console.log('예약성공')\n//         history.push({\n//           pathname: \"/service-register/result\", \n//           state: {\n//             result: true, \n//             detail: submitData\n//           }\n//         })\n//       }).catch((error) => {\n//         console.log(error)\n//       })\n//     }\n//   }","/Users/heoturu/Dev/hwayang/service-register/src/context/SettingContext.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/pages/LandingPage.js",["94","95","96","97","98","99","100"],"/Users/heoturu/Dev/hwayang/service-register/src/components/Timer.js",["101","102","103","104"],"/Users/heoturu/Dev/hwayang/service-register/src/components/SundayServiceButton.js",["105"],"/Users/heoturu/Dev/hwayang/service-register/src/pages/LoadingPage.js",["106"],"import React, {useContext, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { SettingContext } from '../context/SettingContext'\nimport { db } from '../config/firebaseConfig'\nimport styled from 'styled-components'\n\nconst LoadingPage = () => {\n  const [ setting, setSetting ] = useContext(SettingContext)\n  const history = useHistory();\n\n  const initialize = async () => {\n    const settingRef = db.collection('setting').doc('latest')\n    await settingRef.get().then((doc) => {\n      if (doc.exists) {\n        setSetting({\n          ...setting,\n          init: true,\n          isWeekday: doc.data().isWeekday,\n          wednesday: doc.data().wednesday,\n          friday: doc.data().friday,\n          sunday: doc.data().sunday,\n          TimerWednesDay: doc.data().TimerWednesDay,\n          TimerFriDay: doc.data().TimerFriDay,\n          TimerSunDay: doc.data().TimerSunDay,\n          forcingCloseWed: doc.data().forcingCloseWed,\n          forcingCloseFri: doc.data().forcingCloseFri,\n          wednesDaySeats: doc.data().wednesDaySeats,\n          fridaySeats: doc.data().fridaySeats,\n          sundayOneSeats: doc.data().sundayOneSeats,\n          sundayTwoSeats: doc.data().sundayTwoSeats,\n          sundayThreeSeats: doc.data().sundayThreeSeats,\n          sundayFourSeats: doc.data().sundayFourSeats,\n          sundaySixSeats: doc.data().sundaySixSeats,\n          commentWed: doc.data().commentWed,\n          commentFri: doc.data().commentFri,\n          commentSunOne: doc.data().commentSunOne,\n          commentSunTwo: doc.data().commentSunTwo,\n          commentSunThree: doc.data().commentSunThree,\n          commentSunFour: doc.data().commentSunFour,\n          commentSunSix: doc.data().commentSunSix,\n        })\n        console.log(\"세팅업데이트 성공\");\n      } else {\n        console.log(\"데이터가 없습니다.\")\n      }\n    }).catch((error) => {\n      console.log(\"Errors @initialize: \", error)\n    })\n  }\n\n  useEffect(() => {\n    console.log('무한루프체크')\n    initialize()\n    .then(()=>{\n      history.push({\n        pathname: \"/service-register/main\"\n      })\n    })\n  }, [])\n\n  console.log(setting)\n\n  return (\n    <Container>\n      <div>화양교회 예배신청 페이지입니다</div>\n      <div>잠시만 기다려 주세요</div>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default LoadingPage;",["107","108"],"/Users/heoturu/Dev/hwayang/service-register/src/App.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/context/UserContext.js",[],["109","110"],"/Users/heoturu/Dev/hwayang/service-register/src/pages/services/SundayService.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/components/Button.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/components/LinkedButton.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/pages/services/WednesdayService.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/index.js",[],["111","112"],"/Users/heoturu/Dev/hwayang/service-register/src/components/NavBarForAdmin.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/components/WeekdayServiceButton.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/config/firebaseConfig.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/pages/services/FridayService.js",[],"/Users/heoturu/Dev/hwayang/service-register/src/components/NavBar.js",["113"],"/Users/heoturu/Dev/hwayang/service-register/src/pages/AuthPage.js",["114"],{"ruleId":"115","severity":1,"message":"116","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":14},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":110,"column":13,"nodeType":"125","endLine":119,"endColumn":4},{"ruleId":"123","severity":1,"message":"126","line":119,"column":6,"nodeType":"127","endLine":119,"endColumn":8,"suggestions":"128"},{"ruleId":"123","severity":1,"message":"129","line":37,"column":6,"nodeType":"127","endLine":37,"endColumn":8,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"131","line":50,"column":6,"nodeType":"127","endLine":50,"endColumn":8,"suggestions":"132"},{"ruleId":"123","severity":1,"message":"133","line":64,"column":6,"nodeType":"127","endLine":64,"endColumn":28,"suggestions":"134"},{"ruleId":"123","severity":1,"message":"133","line":78,"column":6,"nodeType":"127","endLine":78,"endColumn":29,"suggestions":"135"},{"ruleId":"123","severity":1,"message":"133","line":92,"column":6,"nodeType":"127","endLine":92,"endColumn":28,"suggestions":"136"},{"ruleId":"123","severity":1,"message":"133","line":106,"column":6,"nodeType":"127","endLine":106,"endColumn":29,"suggestions":"137"},{"ruleId":"123","severity":1,"message":"133","line":120,"column":6,"nodeType":"127","endLine":120,"endColumn":28,"suggestions":"138"},{"ruleId":"115","severity":1,"message":"139","line":10,"column":11,"nodeType":"117","messageId":"118","endLine":10,"endColumn":15},{"ruleId":"115","severity":1,"message":"140","line":11,"column":11,"nodeType":"117","messageId":"118","endLine":11,"endColumn":18},{"ruleId":"115","severity":1,"message":"141","line":11,"column":20,"nodeType":"117","messageId":"118","endLine":11,"endColumn":30},{"ruleId":"123","severity":1,"message":"142","line":48,"column":6,"nodeType":"127","endLine":48,"endColumn":8,"suggestions":"143"},{"ruleId":"115","severity":1,"message":"144","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":27},{"ruleId":"123","severity":1,"message":"145","line":59,"column":6,"nodeType":"127","endLine":59,"endColumn":8,"suggestions":"146"},{"ruleId":"119","replacedBy":"147"},{"ruleId":"121","replacedBy":"148"},{"ruleId":"119","replacedBy":"149"},{"ruleId":"121","replacedBy":"150"},{"ruleId":"119","replacedBy":"151"},{"ruleId":"121","replacedBy":"152"},{"ruleId":"115","severity":1,"message":"153","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":21},{"ruleId":"115","severity":1,"message":"154","line":14,"column":11,"nodeType":"117","messageId":"118","endLine":14,"endColumn":19},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'sendingData', 'setSetting', and 'setting'. Either include them or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect has missing dependencies: 'setting.isWeekday' and 'setting.wednesday'. Either include them or remove the dependency array.",["158"],"React Hook useEffect has missing dependencies: 'setting.friday' and 'setting.isWeekday'. Either include them or remove the dependency array.",["159"],"React Hook useEffect has missing dependencies: 'setting.isWeekday' and 'setting.sunday'. Either include them or remove the dependency array.",["160"],["161"],["162"],["163"],["164"],"'stop' is assigned a value but never used.","'setting' is assigned a value but never used.","'setSetting' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'forcingClose' and 'startTimer'. Either include them or remove the dependency array.",["165"],"'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'initialize'. Either include them or remove the dependency array.",["166"],["155"],["156"],["155"],["156"],["155"],["156"],"'ArrowBackIcon' is defined but never used.","'userInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [sendingData, setSetting, setting]",{"range":"187","text":"188"},"Update the dependencies array to be: [setting.isWeekday, setting.wednesday]",{"range":"189","text":"190"},"Update the dependencies array to be: [setting.friday, setting.isWeekday]",{"range":"191","text":"192"},"Update the dependencies array to be: [remainingSunDayFirst, setting.isWeekday, setting.sunday]",{"range":"193","text":"194"},"Update the dependencies array to be: [remainingSunDaySecond, setting.isWeekday, setting.sunday]",{"range":"195","text":"196"},"Update the dependencies array to be: [remainingSunDayThird, setting.isWeekday, setting.sunday]",{"range":"197","text":"198"},"Update the dependencies array to be: [remainingSunDayFourth, setting.isWeekday, setting.sunday]",{"range":"199","text":"200"},"Update the dependencies array to be: [remainingSunDaySixth, setting.isWeekday, setting.sunday]",{"range":"201","text":"202"},"Update the dependencies array to be: [forcingClose, startTimer]",{"range":"203","text":"204"},"Update the dependencies array to be: [history, initialize]",{"range":"205","text":"206"},[4172,4174],"[sendingData, setSetting, setting]",[1628,1630],"[setting.isWeekday, setting.wednesday]",[2030,2032],"[setting.friday, setting.isWeekday]",[2436,2458],"[remainingSunDayFirst, setting.isWeekday, setting.sunday]",[2865,2888],"[remainingSunDaySecond, setting.isWeekday, setting.sunday]",[3294,3316],"[remainingSunDayThird, setting.isWeekday, setting.sunday]",[3721,3744],"[remainingSunDayFourth, setting.isWeekday, setting.sunday]",[4148,4170],"[remainingSunDaySixth, setting.isWeekday, setting.sunday]",[1494,1496],"[forcingClose, startTimer]",[2087,2089],"[history, initialize]"]